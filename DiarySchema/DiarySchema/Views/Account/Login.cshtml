@using DiarySchema.Models
@using Microsoft.AspNet.Identity
@model LoginViewModel
@{ 
    Layout = "~/Views/Shared/_LayoutAdminAdd.cshtml";
}

            <main>
                <div class="row" style="padding-top: 30px; padding-bottom:30px; ">
                    <div class="container col-xs-5 col-xs-offset-3" style="border:solid; background:#93FE83; padding-bottom:20px; border-radius:20px;">
                        <h1 align="center">Вход</h1>  

                        @*  *@
                        @if (Request.IsAuthenticated)
                        {
                            using (Html.BeginForm("LogOff", "Account", FormMethod.Post, new { id = "logoutForm", @class = "navbar-right" }))
                            {
                                @Html.AntiForgeryToken()

                                <ul class="nav navbar-nav navbar-right">
                                    <li>
                                        @Html.ActionLink("Здравствуйте, " + User.Identity.GetUserName() + "!", "Index", "Manage", routeValues: null, htmlAttributes: new { title = "Manage" })
                                    </li>
                                    <li><a href="javascript:document.getElementById('logoutForm').submit()">Выйти</a></li>
                                </ul>
                            }
                        }
                        else
                        {
                            <ul class="nav navbar-nav navbar-right">
                                <li>@Html.ActionLink("Регистрация", "Register", "Account", routeValues: null, htmlAttributes: new { id = "registerLink" })</li>
                                <li>@Html.ActionLink("Выполнить вход", "Login", "Account", routeValues: null, htmlAttributes: new { id = "loginLink" })</li>
                            </ul>
                        }
                        @*  *@
                        
                @using (Html.BeginForm("Login", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
                {
                    @Html.Partial("_LoginPartial")
                    @Html.AntiForgeryToken()                    
                    <hr />
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group">
                        @*<label class="control-label col-xs-6" for="login">Логин:</label>*@
                        @Html.LabelFor(m => m.Email, new { @class = "col-xs-6 control-label" })
                        <div class="col-xs-6">
                            @*<input type="text" class="form-control" id="Email" name="Email" placeholder="Введите логин" required="required">*@
                            @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @*<label class="control-label col-xs-3" for="password">Пароль:</label>*@
                        @Html.LabelFor(m => m.Password, new { @class = "col-xs-6 control-label" })
                        <div class="col-xs-6">
                            @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-xs-offset-7 col-xs-5">
                            <div class="checkbox">
                                @Html.CheckBoxFor(m => m.RememberMe,new {@style= "width: 15px; height: 15px;" })
                                @Html.LabelFor(m => m.RememberMe)
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-xs-offset-4 col-xs-8">
                            <input type="submit" value="Выполнить вход" class="btn btn-default" />
                        </div>
                    </div>
                    <p>
                        @Html.ActionLink("Регистрация нового пользователя", "/../Student/StudentRegister")
                        @*@Html.ActionLink("Регистрация нового пользователя", "Register")*@
                    </p>
                    //Включите, когда будет включено подтверждение учетной записи для функции сброса пароля
                        @*<p>
                            @Html.ActionLink("Забыли пароль?", "ForgotPassword")
                        </p>*@
                }
           
                    </div>
                </div>
            </main>
           



@*@using DiarySchema.Models
@model LoginViewModel*@
@*@{
    ViewBag.Title = "Выполнить вход";
}

<h2>@ViewBag.Title.</h2>
<div class="row">
    <div class="col-md-8">
        <section id="loginForm">
            @using (Html.BeginForm("Login", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
            {
                @Html.AntiForgeryToken()
                <h4>Используйте локальную учетную запись для входа.</h4>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(m => m.Email, new { @class = "col-md-2 control-label" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.Password, new { @class = "col-md-2 control-label" })
                    <div class="col-md-10">
                        @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <div class="checkbox">
                            @Html.CheckBoxFor(m => m.RememberMe)
                            @Html.LabelFor(m => m.RememberMe)
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Выполнить вход" class="btn btn-default" />
                    </div>
                </div>
                <p>
                    @Html.ActionLink("Регистрация нового пользователя", "Register")
                </p>
                //Включите, когда будет включено подтверждение учетной записи для функции сброса пароля
                    <p>
                        @Html.ActionLink("Забыли пароль?", "ForgotPassword")
                    </p>
            }
        </section>
    </div>
    <div class="col-md-4">
        <section id="socialLoginForm">
            @Html.Partial("_ExternalLoginsListPartial", new ExternalLoginListViewModel { ReturnUrl = ViewBag.ReturnUrl })
        </section>
    </div>
</div>*@

@*@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}*@